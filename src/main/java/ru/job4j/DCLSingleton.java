package ru.job4j;

/**
 * Хотя код еще раз проверяет значение экземпляра в синхронизированном блоке
 * , JIT-компилятор может изменить байт-код таким образом, чтобы ссылка на экземпляр была установлена
 * до того, как конструктор завершил свое выполнение. Это означает, что метод instOf() возвращает объект
 * , который, возможно, не был полностью инициализирован. Чтобы сделать код потокобезопасным
 * , нужно использовать ключевое слово volatile для переменной экземпляра. Переменные, помеченные как volatile
 * , становятся видимыми для других потоков только после того, как конструктор объекта полностью завершит
 * свое выполнение.
 */
public class DCLSingleton {
    private static volatile DCLSingleton inst;

    public static DCLSingleton instOf() {
        if (inst == null) {
            synchronized (DCLSingleton.class) {
                if (inst == null) {
                    inst = new DCLSingleton();
                }
            }
        }
        return inst;
    }

    private DCLSingleton() {
    }
}
